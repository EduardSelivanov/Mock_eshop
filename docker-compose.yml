services: 

 # elasticsearch:
 #  image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
 #  container_name: warehouseelastic
 #  ports:
 #  - 9200:9200
 #  volumes:
 #   - elasticsearch-data:/usr/share/elasticsearch/data
 #  environment:
 #   - xpack.security.enabled=false
 #   - discovery.type=single-node 
 #  networks:
 #   - warehousemicroservices

 # kibana:
 #  container_name: warehousekibana
 #  image: docker.elastic.co/kibana/kibana:8.17.1
 #  ports:
 #   - 5601:5601
 #  depends_on: 
 #   - elasticsearch 
 #  environment:
 #   - ELASTICSEARCH_URL=http://localhost:9200
 #  networks:
 #   - warehousemicroservices

 catalogbd:
  image: postgres
  container_name: catalogdbcontainer
  environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=CatalogDb
  restart: always
  ports:
  - "5433:5432"
  volumes:
   - postgres_catalog:/var/lib/postgresql/data/
 
 orderbd:
  image: postgres
  container_name: ordersdbcontainer
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=postgres
   - POSTGRES_DB=OrderDB
  restart: always
  ports:
   - "5434:5432"
  volumes:
   - postgres_ordering:/var/lib/postgresql/data/

 cache:
  image: redis
  container_name: slotscache
  restart: always
  ports:
   - "6379:6379" 

 rabbitmq:
  image: "rabbitmq:3-management"
  container_name: rabbitmq
  ports: 
   - "5672:5672"
   - "15672:15672"
  environment: 
   RABBITMQ_DEFAULT_USER: guest
   RABBITMQ_DEFAULT_PASS: guest
   
networks:
 warehousemicroservices:
  driver: bridge

volumes:
 postgres_catalog:
 postgres_ordering:
 elasticsearch-data: